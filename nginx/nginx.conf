user  root;

# This number should be, at maximum, the number of CPU cores on your system.
# (since nginx doesn't benefit from more than one worker per CPU.)
worker_processes  2;

# only log critical errors
error_log /var/log/nginx/error.log crit;

pid        /var/run/nginx.pid;

daemon off;

events {
    worker_connections  10024;

    # essential for linux, optmized to serve many clients with each thread
    use epoll;

    # Accept as many connections as possible, after nginx gets notification about a new connection.
    # May flood worker_connections, if that option is set too low.
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # default log format
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # default access log
    access_log  off;

    # don't rely on the kernel's sendfile() this is more efficient.
    sendfile        on;

    # Tcp_nopush causes nginx to attempt to send its HTTP response head in one packet,
    # instead of using partial frames. This is useful for prepending headers before calling sendfile,
    # or for throughput optimization.
    tcp_nopush on;

    # don't buffer data-sends (disable Nagle algorithm). Good for sending frequent small bursts of data in real time.
    tcp_nodelay on;

    # allow the server to close the connection after a client stops responding. Frees up socket-associated memory.
    reset_timedout_connection on;

    # allow user agents to keep a connection open with us.
    keepalive_timeout  10;

    # deliver content faster with gzip.
    gzip            on;
    gzip_vary       on;
    gzip_proxied    any;
    gzip_comp_level 4;
    gzip_types      text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    server_tokens off;

    # Caches information about open FDs, freqently accessed files.
    # Changing this setting, in my environment, brought performance up from 560k req/sec, to 904k req/sec.
    # I recommend using some varient of these options, though not the specific values listed below.
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;


    # allow 20Mb as max upload size.
    client_body_buffer_size 20M;

    include /etc/nginx/conf.d/*.conf;
}
